{"version":3,"sources":["reducers/index.js","components/Todo/styles.js","components/Todo/index.js","components/List/styles.js","components/List/index.js","containers/TodoList/index.js","actions/index.js","index.js"],"names":["init","List","reducer","todos","action","type","push","Map","payload","index","undefined","forEach","todo","i","get","delete","id","text","update","findIndex","set","map","isDone","ordered","order","TodoContainer","styled","div","Icon","span","TextEdit","input","Todo","props","classes","onSubmit","event","which","target","onSave","value","blur","DragHandle","SortableHandle","style","cursor","width","height","viewBox","fill","xmlns","d","className","join","onClick","padding","onKeyDown","onBlur","defaultValue","onRemoveClick","SortableTodo","SortableElement","onToggleClick","onEditSubmit","Container","section","FormContainer","form","ListContainer","ListMessage","bind","onSortEnd","textInput","items","preventDefault","this","addTodo","updateTodo","toggleTodo","removeTodo","oldIndex","newIndex","orderedItems","arrayMove","saveAll","_orderBy","toJS","placeholder","ref","el","SortableList","useDragHandle","Component","SortableContainer","content","length","TodoList","connect","state","dispatch","date","Date","uuidv4","created","getTime","localStorage","getItem","JSON","parse","persistedState","store","createStore","subscribe","setItem","stringify","getState","render","document","getElementById"],"mappings":"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","file":"static/js/main.0574e8b4.chunk.js","sourcesContent":["import { List, Map } from \"immutable\";\n\nconst init = List([]);\n\nconst reducer = (todos = init, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return todos.push(Map(action.payload));\n\n    case \"REMOVE_TODO\":\n      let index = undefined;\n      todos.forEach((todo, i) => {\n        if (todo.get(\"id\") === action.payload) {\n          index = i;\n        }\n      });\n      return todos.delete(index);\n\n    case \"UPDATE_TODO\":\n      let id = action.payload.id;\n      let text = action.payload.text;\n\n      return todos.update(\n        todos.findIndex((todo) => {\n          return todo.get(\"id\") === id;\n        }),\n        (todo) => {\n          return todo.set(\"text\", text);\n        }\n      );\n\n    case \"TOGGLE_TODO\":\n      return todos.map((todo) => {\n        if (todo.get(\"id\") === action.payload) {\n          return todo.update(\"isDone\", (isDone) => !isDone);\n        } else {\n          return todo;\n        }\n      });\n\n    case \"SAVE_ALL\":\n      let ordered = action.payload.map((todo, i) => {\n        todo.order = i;\n        return Map(todo);\n      });\n      return List(ordered);\n\n    default:\n      return todos;\n  }\n};\n\nexport default reducer;\n","import styled from \"styled-components\";\n\nexport const TodoContainer = styled.div`\n  height: 44px;\n  margin: 0 0 5px;\n  border: #f1f1f1 solid 1px;\n  border-radius: 22px;\n  align-items: stretch;\n  display: flex;\n  padding: 0 5px;\n`;\n\nexport const Icon = styled.span`\n  align-items: center;\n  padding: 0 10px 0 10px;\n  cursor: pointer;\n  display: flex;\n\n  svg {\n    fill: #cccccc;\n    height: 22px;\n    width: 22px;\n  }\n\n  &:hover {\n    opacity: 1;\n\n    svg {\n      fill: #9c22c3;\n    }\n  }\n`;\n\nexport const TextEdit = styled.input`\n  background-color: #ffffff;\n  height: 100%;\n  font-family: \"Quicksand\", sans-serif;\n  font-size: 14px;\n  font-size: 500;\n  color: #666666;\n  padding: 0 10px 0 10px;\n  border: none;\n  flex-grow: 1;\n  display: flex;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  .is-done & {\n    color: #cccccc;\n    text-decoration: line-through;\n  }\n\n  &:hover {\n    background-color: #fdf8ff;\n    color: #9c22c3;\n  }\n\n  &:focus {\n    color: #9c22c3;\n    outline: none;\n  }\n`;\n","import React from \"react\";\nimport { SortableElement, SortableHandle } from \"react-sortable-hoc\";\nimport { TodoContainer, Icon, TextEdit } from \"./styles\";\n\nconst Todo = (props) => {\n  let classes = [];\n\n  if (props.isDone) {\n    classes.push(\"is-done\");\n  }\n\n  const onSubmit = (event) => {\n    const isEnterKey = event.which === undefined || event.which === 13;\n\n    if (isEnterKey) {\n      const target = event.target;\n      props.onSave(props.id, target.value);\n      target.blur();\n    }\n  };\n\n  const DragHandle = SortableHandle(() => {\n    return (\n      <Icon style={{ cursor: \"grab\" }}>\n        <svg\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M21 18H3V16H21V18ZM21 13H3V11H21V13ZM21 8H3V6H21V8Z\" />\n        </svg>\n      </Icon>\n    );\n  });\n\n  return (\n    <TodoContainer className={classes.join(\" \")}>\n      <DragHandle />\n      <Icon\n        onClick={() => props.onClick(props.id)}\n        style={{ padding: \"0 5px 0 5px\" }}\n      >\n        {props.isDone ? (\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C21.9939 17.5203 17.5203 21.9939 12 22ZM11.984 20H12C16.4167 19.9956 19.9942 16.4127 19.992 11.996C19.9898 7.57929 16.4087 4 11.992 4C7.57528 4 3.99421 7.57929 3.992 11.996C3.98979 16.4127 7.56729 19.9956 11.984 20ZM10 17L6 13L7.41 11.59L10 14.17L16.59 7.58L18 9L10 17Z\" />\n          </svg>\n        ) : (\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C21.9939 17.5203 17.5203 21.9939 12 22ZM11.984 20H12C16.4167 19.9956 19.9942 16.4127 19.992 11.996C19.9898 7.57929 16.4087 4 11.992 4C7.57528 4 3.99421 7.57929 3.992 11.996C3.98979 16.4127 7.56729 19.9956 11.984 20Z\" />\n          </svg>\n        )}\n      </Icon>\n      <TextEdit\n        onKeyDown={onSubmit}\n        onBlur={onSubmit}\n        defaultValue={props.text}\n      />\n      <Icon onClick={() => props.onRemoveClick(props.id)}>\n        <svg\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M17 22H7C5.89543 22 5 21.1046 5 20V7H3V5H7V4C7 2.89543 7.89543 2 9 2H15C16.1046 2 17 2.89543 17 4V5H21V7H19V20C19 21.1046 18.1046 22 17 22ZM7 7V20H17V7H7ZM9 4V5H15V4H9Z\" />\n        </svg>\n      </Icon>\n    </TodoContainer>\n  );\n};\n\nconst SortableTodo = SortableElement(\n  ({ id, isDone, text, onToggleClick, onRemoveClick, onEditSubmit }) => {\n    return (\n      <Todo\n        id={id}\n        key={id}\n        text={text}\n        isDone={isDone}\n        onClick={onToggleClick}\n        onRemoveClick={onRemoveClick}\n        onSave={onEditSubmit}\n      />\n    );\n  }\n);\n\nexport default SortableTodo;\n","import styled from \"styled-components\";\n\nexport const Container = styled.section`\n  width: 90%;\n  max-width: 800px;\n  flex-direction: column;\n  display: flex;\n`;\n\nexport const FormContainer = styled.form`\n  margin: 20px 0;\n  position: relative;\n  display: flex;\n\n  input {\n    align-items: center;\n    background-color: #f9f9f9;\n    font-family: \"Quicksand\", sans-serif;\n    font-size: 14px;\n    font-size: 500;\n    color: #222222;\n    height: 40px;\n    padding: 0 16px;\n    border: 1px solid #eeeeee;\n    border-radius: 20px;\n    outline: none;\n    display: flex;\n    width: 100%;\n    z-index: 0;\n\n    &:focus {\n      border-color: #cccccc;\n    }\n  }\n\n  button {\n    align-items: center;\n    background-color: #f9f9f9;\n    border: 2px solid #eeeeee;\n    border-radius: 15px;\n    color: #666666;\n    cursor: pointer;\n    display: flex;\n    font-family: \"Quicksand\", sans-serif;\n    font-size: 14px;\n    font-size: 500;\n    height: 30px;\n    justify-content: center;\n    padding: 0 3px;\n    position: absolute;\n    right: 5px;\n    top: 5px;\n    z-index: 1;\n\n    svg {\n      fill: #666666;\n      margin: 0;\n    }\n\n    span {\n      display: none;\n    }\n\n    &:hover {\n      background-color: #9c22c3;\n      border: 2px solid #9c22c3;\n      color: #ffffff;\n\n      svg {\n        fill: #ffffff;\n      }\n    }\n\n    @media (min-width: 768px) {\n      padding: 0 10px 0 5px;\n\n      svg {\n        margin: 0 2px 0 0;\n      }\n\n      span {\n        display: inline;\n      }\n    }\n  }\n`;\n\nexport const ListContainer = styled.div`\n  padding: 0;\n  margin: 0 0 20px;\n  list-style: none;\n  flex-direction: column;\n  display: flex;\n`;\n\nexport const ListMessage = styled.div`\n  font-family: \"Quicksand\", sans-serif;\n  font-size: 15px;\n  font-size: 500;\n  text-align: center;\n  color: #999999;\n  padding: 12px 16px;\n`;\n","import React, { Component } from \"react\";\nimport { SortableContainer, arrayMove } from \"react-sortable-hoc\";\nimport _orderBy from \"lodash/orderBy\";\nimport SortableTodo from \"../Todo\";\nimport { Container, FormContainer, ListContainer, ListMessage } from \"./styles\";\n\nclass List extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onEditSubmit = this.onEditSubmit.bind(this);\n    this.onToggleClick = this.onToggleClick.bind(this);\n    this.onRemoveClick = this.onRemoveClick.bind(this);\n    this.onSortEnd = this.onSortEnd.bind(this);\n\n    this.textInput = undefined;\n\n    this.items = undefined;\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const input = this.textInput;\n    const text = input.value;\n\n    input.value = \"\";\n    this.props.addTodo(text);\n  }\n\n  onEditSubmit(id, text) {\n    this.props.updateTodo(id, text);\n  }\n\n  onToggleClick(id, text) {\n    this.props.toggleTodo(id, text);\n  }\n\n  onRemoveClick(id) {\n    this.props.removeTodo(id);\n  }\n\n  onSortEnd({ oldIndex, newIndex }) {\n    let orderedItems = arrayMove(this.items, oldIndex, newIndex);\n\n    this.props.saveAll(orderedItems);\n  }\n\n  render() {\n    this.items = _orderBy(\n      this.props.todos.toJS(),\n      [\"isDone\", \"order\"],\n      [\"asc\", \"asc\"]\n    );\n\n    return (\n      <Container>\n        <FormContainer onSubmit={this.onSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Add task...\"\n            ref={(el) => (this.textInput = el)}\n          />\n          <button>\n            <svg\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M9.52495 17.657L4.57495 12.707L5.98895 11.293L9.64295 14.943L9.52495 14.828L18.01 6.343L19.424 7.757L10.939 16.243L9.52595 17.656L9.52495 17.657Z\" />\n            </svg>\n            <span>Create</span>\n          </button>\n        </FormContainer>\n\n        <SortableList\n          todos={this.items}\n          onSortEnd={this.onSortEnd}\n          onSubmit={this.onSubmit}\n          onEditSubmit={this.onEditSubmit}\n          onToggleClick={this.onToggleClick}\n          onRemoveClick={this.onRemoveClick}\n          useDragHandle={true}\n        />\n      </Container>\n    );\n  }\n}\n\nconst SortableList = SortableContainer(\n  ({ todos, onSubmit, onEditSubmit, onToggleClick, onRemoveClick }) => {\n    let content = undefined;\n\n    if (todos.length > 0) {\n      content = todos.map((todo, index) => {\n        return (\n          <SortableTodo\n            id={todo.id}\n            key={todo.id}\n            index={index}\n            text={todo.text}\n            isDone={todo.isDone}\n            onToggleClick={onToggleClick}\n            onRemoveClick={onRemoveClick}\n            onEditSubmit={onEditSubmit}\n          />\n        );\n      });\n    } else {\n      content = <ListMessage>No tasks</ListMessage>;\n    }\n\n    return <ListContainer>{content}</ListContainer>;\n  }\n);\n\nexport default List;\n","import { connect } from \"react-redux\";\nimport List from \"../../components/List\";\nimport {\n  addTodo,\n  removeTodo,\n  updateTodo,\n  toggleTodo,\n  saveAll,\n} from \"../../actions\";\n\nconst mapStateToProps = (state) => {\n  return { todos: state };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTodo: (text) => dispatch(addTodo(text)),\n    removeTodo: (id) => dispatch(removeTodo(id)),\n    updateTodo: (id, text) => dispatch(updateTodo(id, text)),\n    toggleTodo: (id) => dispatch(toggleTodo(id)),\n    saveAll: (todos) => dispatch(saveAll(todos)),\n  };\n};\n\nconst TodoList = connect(mapStateToProps, mapDispatchToProps)(List);\n\nexport default TodoList;\n","import { v4 as uuidv4 } from \"uuid\";\n\nexport function addTodo(text) {\n  const date = new Date();\n  return {\n    type: \"ADD_TODO\",\n    payload: {\n      id: uuidv4(),\n      isDone: false,\n      text: text,\n      created: date.getTime(),\n    },\n  };\n}\n\nexport function removeTodo(id) {\n  return {\n    type: \"REMOVE_TODO\",\n    payload: id,\n  };\n}\n\nexport function updateTodo(id, text) {\n  return {\n    type: \"UPDATE_TODO\",\n    payload: {\n      id: id,\n      text: text,\n    },\n  };\n}\n\nexport function toggleTodo(id) {\n  return {\n    type: \"TOGGLE_TODO\",\n    payload: id,\n  };\n}\n\nexport function saveAll(todos) {\n  return {\n    type: \"SAVE_ALL\",\n    payload: todos,\n  };\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { List, Map } from \"immutable\";\nimport reducer from \"./reducers\";\nimport TodoList from \"./containers/TodoList\";\nimport \"./index.css\";\n\nlet todos = localStorage.getItem(\"todos\")\n  ? JSON.parse(localStorage.getItem(\"todos\"))\n  : [];\n\ntodos = todos.map((todo) => {\n  return Map(todo);\n});\n\nlet persistedState = List(todos);\n\nconst store = createStore(reducer, persistedState);\n\nstore.subscribe(() => {\n  localStorage.setItem(\"todos\", JSON.stringify(store.getState()));\n});\n\nrender(\n  <Provider store={store}>\n    <TodoList />\n  </Provider>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}